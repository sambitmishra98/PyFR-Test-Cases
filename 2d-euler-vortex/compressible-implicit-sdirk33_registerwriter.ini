[backend]
precision = double

[constants]
gamma = 1.4
S = 13.5    ; Strength
M = 0.4     ; Mach number
R = 1.5     ; Radius

[solver]
system = euler
order = 1

[solver-time-integrator]
formulation = dual

scheme = sdirk33
controller = none
tstart = 0.0
tend = 1
dt = 0.01
tcurr = 0

pseudo-scheme = rk45
pseudo-controller = local-pi
pseudo-dt = 0.005
pseudo-dt-max-mult = 3
pseudo-niters-min = 1
pseudo-niters-max = 10
pseudo-resid-tol = 1e-7

atol = 1e-4
rtol = 1e-4

[solver-interfaces]
riemann-solver = rusanov

[solver-interfaces-line]
flux-pts = gauss-legendre

[solver-elements-quad]
soln-pts = gauss-legendre


[pseudo-plugin-registerwriter-2]
basedir = .
basename = reg-2
post-action = pyfr export {mesh} {soln} reg-2.vtu
times = [(0.9, 1, 1)]

[pseudo-plugin-pseudodtwriter]
basedir = .
basename = pseudodt
post-action = pyfr export {mesh} {soln} pseudodt.vtu
times = [(0.9, 1, 1)]

[soln-ics]
f = ((1 - x*x - y*y)/(2*R*R))
rho = pow(1 - S*S*M*M*(gamma - 1)*exp(2*%(f)s)/(8*pi*pi), 1/(gamma - 1))
u = S*y*exp(%(f)s)/(2*pi*R)
v = 1 - S*x*exp(%(f)s)/(2*pi*R)
p = 1/(gamma*M*M)*pow(1 - S*S*M*M*(gamma - 1)*exp(2*%(f)s)/(8*pi*pi), gamma/(gamma - 1))
