[backend]
precision = double

[constants]
nu = 6.25e-4
Ps = 111.607
ac-zeta = 5

[solver]
system = ac-navier-stokes
order = 4

[solver-time-integrator]
formulation         = dual
scheme              = sdirk33
pseudo-scheme       = rk45
controller          = none
pseudo-controller   = local-pi
tstart              = 0.0
tend                = 10
dt                  = 0.36
pseudo-dt           = 0.001
pseudo-dt-min-mult  = 0.001
pseudo-dt-max-mult  = 100000
pseudo-niters-min   = 1
pseudo-niters-max   = 1000
pseudo-resid-norm   = l2
pseudo-resid-tol    = 1e-4
pseudo-resid-tol-p  = 1e-3

atol                = 1e-10
safety-fact         = 0.9
max-fact            = 1.05
min-fact            = 0.9

[solver-dual-time-integrator-multip]
pseudo-dt-fact = 2.2
cycle = [(4, 1), (3, 1), (2, 1), (1, 1), (0, 2), (1, 1), (2, 1), (3, 1), (4, 1)]

[solver-interfaces]
riemann-solver = rusanov
ldg-beta = 0.5
ldg-tau = 0.1

[solver-interfaces-quad]
flux-pts = gauss-legendre

[solver-elements-hex]
soln-pts = gauss-legendre

[soln-plugin-integrate]
nsteps = 1
file   = integral_acm.csv
header = true
vor1   = grad_w_y - grad_v_z
vor2   = grad_u_z - grad_w_x
vor3   = grad_v_x - grad_u_y

int-E    = u*u + v*v + w*w
int-enst = %(vor1)s*%(vor1)s + %(vor2)s*%(vor2)s + %(vor3)s*%(vor3)s

[soln-ics]
u   = sin(x)*cos(y)*cos(z)
v   = -cos(x)*sin(y)*cos(z)
w   = 0
p   = Ps + (1.0/16.0)*(cos(2*x) + cos(2*y))*(cos(2*z + 2))