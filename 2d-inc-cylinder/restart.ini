[backend]
precision = double

[constants]
nu = 0.005
Uin = 1.0
Vin = 0.0
Pc = 1.0
ac-zeta = 2.5

[solver]
system = ac-navier-stokes
order = 3

[solver-time-integrator]
formulation = dual
scheme = sdirk43
pseudo-scheme = rk45
controller = pi
; tstart = 0.0
pseudo-controller = local-pi
tend = 90.2
dt = 0.01
pseudo-dt = 0.003
#dt-over-dtau = 20
pseudo-niters-min = 1
pseudo-niters-max = 100
pseudo-resid-norm = l2
pseudo-resid-tol = 2e-6
pseudo-resid-tol-p = 0.005
atol = 1e-8
pseudo-dt-max-mult = 1.5

max-fact = 1.01
min-fact = 0.98

;[soln-plugin-writer]
;dt-out = 1
;basedir = .
;basename = base-2-soln-{t:.2f}.pyfrs

[solver-dual-time-integrator-multip]
pseudo-dt-fact = 1.75
cycle = [(3, 1), (2, 1), (1, 1), (0, 2), (1, 1), (2, 1), (3, 4)]

[solver-interfaces]
riemann-solver = rusanov
ldg-beta = 0.5
ldg-tau = 0.1
[solver-interfaces-line]
flux-pts = gauss-legendre
[solver-elements-tri]
soln-pts = williams-shunn
[solver-elements-quad]
soln-pts = gauss-legendre
[soln-plugin-nancheck]
nsteps = 1

;[soln-plugin-pseudostats]
;flushsteps = 1
;file = res.csv
;header = true

[soln-plugin-morepseudostats]
flushsteps = 1
file = base-1-mores.csv
header = true

[soln-plugin-integrate]
nsteps = 1
file = base-2-int.csv
header = true
quad-deg = 4
int-div = (grad_u_x + grad_v_y)
int-diva = abs(grad_u_x + grad_v_y)
region = *

[soln-plugin-sampler]
nsteps = 1
samp-pts = [(0.71,0.66)]
format = conservative
file = base-2-points.csv
header = true

;[soln-plugin-optimisation]
;opt-type = online
;base-loc = optimisation
;track = 2
;optimisables = cycle_1, cycle_2, cycle_3, cycle_4
;bounds = [(0, 10), (0, 10), (0, 10), (0, 10)]

[soln-bcs-wall]
type = no-slp-wall
[soln-bcs-inlet]
type = ac-char-riem-inv
ac-zeta = 180
p = Pc
u = Uin
v = Vin
[soln-bcs-outlet]
type = ac-char-riem-inv
ac-zeta = 180
p = Pc
u = Uin
v = Vin
[soln-ics]
u = Uin
v = Vin
p = Pc
