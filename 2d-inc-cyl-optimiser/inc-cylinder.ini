[backend]
precision = double

[constants]
nu = 0.005
Uin = 1.0
Vin = 0.0
Pc = 1.0

[solver]
system = ac-navier-stokes
ac-zeta = 2.5
order = 0

[solver-time-integrator]
formulation = dual
scheme = backward-euler
pseudo-scheme = rk34
controller = none
pseudo-controller = none
tstart = 0.0
tend = 0.05
dt = 0.05
pseudo-dt = 0.005
pseudo-niters-min = 1
pseudo-niters-max = 1
pseudo-resid-norm = l2

pseudo-resid-tol   = 0.0001
pseudo-resid-tol-p = 0.01

[solver-dual-time-integrator-multip]
pseudo-dt-fact = 1.75
cycle = [(0, 1)]

[solver-interfaces]
riemann-solver = rusanov
ldg-beta = 0.5
ldg-tau = 0.1

[solver-interfaces-line]
flux-pts = gauss-legendre

[solver-elements-tri]
soln-pts = williams-shunn

[solver-elements-quad]
soln-pts = gauss-legendre

[soln-plugin-nancheck]
nsteps = 50

[soln-plugin-pseudostats]
flushsteps = 20
file = residual.csv
header = true

[soln-plugin-writer]
dt-out = 5.0
basedir = .
basename = inc-cylinder-{t:.2f}

[soln-bcs-wall]
type = no-slp-wall

[soln-bcs-inlet]
type = ac-char-riem-inv
ac-zeta = 180
p = Pc
u = Uin
v = Vin

[soln-bcs-outlet]
type = ac-char-riem-inv
ac-zeta = 180
p = Pc
u = Uin
v = Vin

[soln-ics]
u = Uin
v = Vin
p = Pc

[soln-plugin-integrate]
nsteps = 1
file = int.csv
quad-deg = 4
int-absolute-divergence = abs(grad_u_x + grad_v_y)

[local-optimiser-zeta]
cost = integral-absolute-divergence
parameter = ac-zeta

;[global-optimiser-botorch]
;cost = runtime
;parameter = pmultigrid-0 pmultigrid-1 pmultigrid-2 pmultigrid-3 pmultigrid-4 pmultigrid-5 pmultigrid-6
;acqf-list = [('kg', 10), ('ei', 10)]
;bounds = [(1.0, 10.0), (0.0, 10.0), (0.0, 10.0), (0.0, 10.0), (0.0, 10.0), (0.0, 10.0), (0.0, 10.0)]
